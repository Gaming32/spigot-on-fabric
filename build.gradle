plugins {
    id 'fabric-loom' version '1.4.+'
    id 'maven-publish'
    id("io.freefair.lombok") version "8.4"
}

version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "ParchmentMC"
        url = "https://maven.parchmentmc.org"
    }
    maven {
        url = "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings(loom.layered {
        officialMojangMappings {
            nameSyntheticMembers = true
        }
        parchment("org.parchmentmc.data:parchment-1.20.2:2023.10.22@zip")
        mappings(file("spigot.tiny"))
        mappings(file("fixes.tiny"))
    })
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    include(implementation("org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT"))

    include(implementation("org.slf4j:jul-to-slf4j:2.0.9"))

    include(implementation("net.lenni0451:Reflect:1.3.1"))

    for (moduleName in [
        "fabric-api-base",
        "fabric-resource-loader-v0",
        "fabric-lifecycle-events-v1",
    ]) {
        include(modImplementation(fabricApi.module(moduleName, "0.91.3+1.20.4")))
    }
}

loom {
    accessWidenerPath = file("src/main/resources/spigot-on-fabric.accessWidener")
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    it.sourceCompatibility = targetJavaVersion
    it.targetCompatibility = targetJavaVersion
    it.options.compilerArgs << "--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED"
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
